{
  "openapi": "3.0.3",
  "info": {
    "title": "Pricing API",
    "description": "The `pricing-api` hub sets the foundations for the following Pricing APIs:\n\n### Order API\nThis api enables the management of orders in epilot 360, providing features such as:\n - Automatic calculation of totals and price breakdowns for taxes on the Order entity\n - Product and pricing data validation\n\n### Shopping Cart API\nUsed to interact with a cart during a customer's checkout session, providing:\n - An unified data model to model a Shopping Cart\n - Product and pricing data validation\n - Checkout a cart into an order or quote\n\n### Catalog API\nProvides a way to query the entire catalog of products and prices.\n\n### Availability API\nProvides endpoints for querying products availability by a set of predefined dimensions.\n",
    "version": "1.0.0",
    "termsOfService": "https://epilot.cloud/agb",
    "contact": {
      "name": "Support",
      "email": "info@epilot.cloud",
      "url": "https://help.epilot.cloud"
    }
  },
  "tags": [
    {
      "name": "Order API",
      "description": "This api enables the management of orders in epilot 360, providing features such as:\n - Automatic calculation of totals and price breakdowns for taxes on the Order entity\n - Product and pricing data validation\n"
    },
    {
      "name": "Cart API",
      "description": "Used to interact with a cart during a customer's checkout session, providing:\n - An unified data model to model a Shopping Cart\n - Product and pricing data validation\n - Checkout a cart into an order or quote\n"
    },
    {
      "name": "Catalog API",
      "description": "Provides a way to query the entire catalog of products and prices.\n"
    },
    {
      "name": "Availability API",
      "description": "Provides endpoints for querying products availability by a set of predefined dimensions.\n"
    },
    {
      "name": "Deprecated Endpoints",
      "description": "Deprecated endpoints.\n"
    },
    {
      "name": "order_schema",
      "x-displayName": "Order",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Order\" exampleRef=\"#/components/examples/order-with-simple-prices\" />\n"
    },
    {
      "name": "order_with_bundles",
      "x-displayName": "Order (with Price Bundles)",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Order\" exampleRef=\"#/components/examples/order-with-price-bundles\" />\n"
    },
    {
      "name": "opportunity_schema",
      "x-displayName": "Opportunity",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Opportunity\" exampleRef=\"#/components/examples/opportunity\" />\n"
    },
    {
      "name": "product_schema",
      "x-displayName": "Product",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Product\" exampleRef=\"#/components/examples/product\" />\n"
    },
    {
      "name": "simple_price_schema",
      "x-displayName": "Price",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Price\" exampleRef=\"#/components/examples/price\" />\n"
    },
    {
      "name": "dynamic_price_schema",
      "x-displayName": "Price Bundle",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PriceBundle\" exampleRef=\"#/components/examples/price-bundle\" />\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Commerce Schemas",
      "tags": [
        "order_schema",
        "opportunity_schema"
      ]
    },
    {
      "name": "Pricing Schemas",
      "tags": [
        "product_schema",
        "simple_price_schema",
        "dynamic_price_schema"
      ]
    },
    {
      "name": "Examples",
      "tags": [
        "order_with_bundles"
      ]
    },
    {
      "name": "APIs",
      "tags": [
        "Order API",
        "Cart API",
        "Catalog API",
        "Availability API",
        "Deprecated"
      ]
    }
  ],
  "security": [
    {
      "EpilotAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://pricing-api.sls.epilot.io"
    },
    {
      "url": "https://pricing-api.sls.epilot.io"
    },
    {
      "url": "https://pricing-api.sls.epilot.io"
    }
  ],
  "paths": {
    "/v1/order": {
      "post": {
        "description": "Create an order",
        "operationId": "createOrder",
        "summary": "createOrder",
        "tags": [
          "Order API"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/order/{id}": {
      "put": {
        "description": "Update an existing Order",
        "operationId": "putOrder",
        "summary": "putOrder",
        "tags": [
          "Order API"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Order entity ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1ec8518f-7538-48f7-8297-44f120d3e5cd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/public/cart:checkout": {
      "post": {
        "description": "Checkouts a cart and executes the specified checkout `mode` process.\n\nA Checkout implicitly finalizes the provided cart (if not transient from a fast-checkout) and behaves in one of the following modes:\n- `create_order` (**default**): the payment happens at a later date or managed by 3rd-party CRM (SAP)\n- `create_invoice`: the payment happens on the online checkout (paypal, stripe, adyen)\n- `create_quote`: the checkout represents a price quote request\n\nFast checkout is also supported, by passing the Cart contents directly.\nWhen a fast checkout is performed the cart is considered transient and there is no cart persistance.\n\nIf the checkout `mode` is omitted, the `mode` will default to `create_order`.\n",
        "operationId": "$checkoutCart",
        "summary": "checkoutCart",
        "security": [],
        "tags": [
          "Cart API"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Ivy-Org-ID",
            "description": "The target Organization Id represented by the caller",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutCart"
              },
              "examples": {
                "Checkout with a CartID": {
                  "$ref": "#/components/examples/checkout-with-cart-id"
                },
                "Fast Checkout with a transient Cart": {
                  "$ref": "#/components/examples/checkout-with-transient-cart"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The checkout result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutCartResult"
                },
                "examples": {
                  "Checkout with created order": {
                    "$ref": "#/components/examples/checkout-result"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/public/catalog": {
      "post": {
        "description": "Provides a querying functionalities over products and prices of the Catalog for a given organization.",
        "operationId": "$searchCatalog",
        "summary": "searchCatalog",
        "security": [],
        "tags": [
          "Catalog API"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Ivy-Org-ID",
            "description": "The target Organization Id represented by the caller",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The search result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/public/availability:check": {
      "post": {
        "description": "The availability check endpoint",
        "operationId": "$availabilityCheck",
        "summary": "availabilityCheck",
        "security": [],
        "tags": [
          "Availability API"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Ivy-Org-ID",
            "description": "The target Organization Id represented by the caller",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityCheckParams"
              },
              "examples": {
                "Check availability with location dimension": {
                  "value": {
                    "products": [
                      "cd75456a-30e4-4912-95be-e743d5ea175b"
                    ],
                    "filters": {
                      "location": {
                        "postal_code": "57008",
                        "city": "Cologne",
                        "street": "Media Park",
                        "street_number": "8a"
                      }
                    }
                  }
                },
                "Check availability with location & available date dimension": {
                  "value": {
                    "products": [
                      "cd75456a-30e4-4912-95be-e743d5ea175b"
                    ],
                    "filters": {
                      "location": {
                        "postal_code": "57008",
                        "city": "Cologne",
                        "street": "Media Park",
                        "street_number": "8a"
                      },
                      "available_date": "2022-05-01"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The availability check result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityResult"
                },
                "examples": {
                  "Response with available products": {
                    "value": {
                      "available_products": [
                        "cd75456a-30e4-4912-95be-e743d5ea175b"
                      ],
                      "check_results": [
                        {
                          "product_id": "cd75456a-30e4-4912-95be-e743d5ea175b",
                          "matching_hits": 1
                        }
                      ]
                    }
                  },
                  "Response with no available products": {
                    "value": {
                      "available_products": []
                    }
                  },
                  "Response with available and unavailable products": {
                    "value": {
                      "availableProducts": [
                        "my-product-id-123-2"
                      ],
                      "checkResults": [
                        {
                          "productId": "my-product-id-123-1",
                          "matchingError": {
                            "msg": "Error - Unknown file extension for availability file."
                          }
                        },
                        {
                          "matchingHits": 1,
                          "productId": "my-product-id-123-2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/public/opportunity": {
      "post": {
        "deprecated": true,
        "description": "This API is Deprecated. Please use the Entity API or Submission API to create opportunities.\n\nEnables the creation of a new opportunity. During the creation of an opportunity, an unique customer-readable `opportunity_number` will be generated.\nThe `opportunity_number` can be used to universally identify an opportunity within epilot platform.\n",
        "operationId": "$createOpportunity",
        "summary": "createOpportunity",
        "security": [],
        "tags": [
          "Deprecated"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Ivy-Org-ID",
            "description": "The target Organization Id represented by the caller",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Opportunity"
              },
              "examples": {
                "Opportunity containing one Order": {
                  "value": {
                    "billing_address": {
                      "street": "sdf",
                      "street_number": "1",
                      "city": "Berlin",
                      "postal_code": "12045",
                      "country": "de",
                      "additional_info": "adasd"
                    },
                    "delivery_address": {
                      "street": "sdf",
                      "street_number": "1",
                      "city": "Berlin",
                      "postal_code": "12045",
                      "country": "de",
                      "additional_info": "adasd"
                    },
                    "items": {
                      "$relation": [
                        {
                          "entity_id": "c8dbe8f3-28b6-4d77-aae8-47bc24a2532f",
                          "_tags": [
                            "journey"
                          ]
                        }
                      ]
                    },
                    "_tags": [
                      "journey",
                      "ORWNr4iCN"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new Opportunity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "EpilotAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Epilot Bearer Token"
      }
    },
    "schemas": {
      "Error": {
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Product": {
        "type": "object",
        "description": "The product entity",
        "readOnly": true,
        "additionalProperties": true,
        "properties": {
          "code": {
            "type": "string",
            "description": "The product code"
          },
          "type": {
            "type": "string",
            "description": "The type of Product:\n\n| type | description |\n|----| ----|\n| `product` | Represents a physical good |\n| `service` | Represents a service or virtual product |\n",
            "enum": [
              "product",
              "service"
            ]
          },
          "name": {
            "type": "string",
            "description": "The product main name"
          },
          "feature": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_tags": {
                  "type": "array",
                  "description": "An arbitrary set of tags attached to a feature",
                  "items": {
                    "type": "string"
                  }
                },
                "feature": {
                  "type": "string"
                }
              }
            }
          },
          "cross_sellable_products": {
            "type": "object",
            "description": "Stores references to products that can be cross sold with the current product.",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityRelation"
                }
              }
            }
          },
          "product_images": {
            "type": "object",
            "description": "Stores references to a set of file images of the product",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityRelation"
                }
              }
            }
          },
          "product_downloads": {
            "type": "object",
            "description": "Stores references to a set of files downloadable from the product.\ne.g: tech specifications, quality control sheets, privacy policy agreements\n",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityRelation"
                }
              }
            }
          },
          "price_options": {
            "type": "object",
            "description": "A set of [prices](/api/pricing#tag/simple_price_schema) or [price bundles](/api/pricing#tag/dynamic_price_schema) for the current product.",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityRelation"
                }
              }
            }
          },
          "_availability_files": {
            "type": "array",
            "description": "Stores references to the availability files that define where this product is available.\nThese files are used when interacting with products via epilot Journeys, thought the AvailabilityCheck block.\n",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          },
          "_id": {
            "type": "string",
            "description": "The product id"
          },
          "_title": {
            "type": "string",
            "description": "The autogenerated product title"
          },
          "_org_id": {
            "type": "string",
            "description": "The organization id the product belongs to"
          },
          "_created_at": {
            "type": "string",
            "description": "The product creation date",
            "readOnly": true
          },
          "_updated_at": {
            "type": "string",
            "description": "The product last update date",
            "readOnly": true
          }
        }
      },
      "Opportunity": {
        "type": "object",
        "description": "The opportunity entity",
        "additionalProperties": true,
        "properties": {
          "opportunity_number": {
            "type": "string",
            "description": "The opportunity id number for the customer (autogenerated if left blank)"
          },
          "opportunity_title": {
            "type": "string",
            "description": "The opportunity title for the opportunity"
          },
          "description": {
            "type": "string",
            "description": "A description to frame this opportunity within its sales process"
          },
          "status": {
            "type": "string",
            "description": "The opportunity status (defined by the opportunity workflow)"
          },
          "due_date": {
            "type": "string",
            "description": "The expiration date"
          },
          "assignee": {
            "description": "The opportunity assignees",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "image_uri": {
                  "type": "string"
                },
                "organization_id": {
                  "type": "string"
                },
                "department": {
                  "type": "string"
                },
                "preferred_language": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "email_notification_settings": {
                  "type": "object"
                },
                "is_signature_enabled": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string"
                }
              }
            }
          },
          "customer": {
            "type": "object",
            "description": "A list of customers related with the opportunity",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityRelation"
                }
              }
            }
          },
          "dates": {
            "type": "array",
            "description": "A set of dates associated with the opportunity",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "_tags": {
                      "type": "array",
                      "description": "The date tags",
                      "items": {
                        "type": "string"
                      }
                    },
                    "value": {
                      "description": "The date value",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "billing_address": {
            "description": "The billing address",
            "type": "object",
            "properties": {
              "$relation_ref": {
                "description": "The relation from which a field is being referenced",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "entity_id": {
                          "description": "The id of the referenced entity",
                          "type": "string"
                        },
                        "path": {
                          "description": "The path to the target attribute being referenced",
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "delivery_address": {
            "description": "The delivery address",
            "type": "object",
            "properties": {
              "$relation_ref": {
                "description": "The relation from which a field is being referenced",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "entity_id": {
                          "description": "The id of the referenced entity",
                          "type": "string"
                        },
                        "path": {
                          "description": "The path to the target attribute being referenced",
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "address": {
            "description": "A list of additional addresses",
            "type": "object",
            "properties": {
              "$relation_ref": {
                "description": "The relation from which a field is being referenced",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "entity_id": {
                          "description": "The id of the referenced entity",
                          "type": "string"
                        },
                        "path": {
                          "description": "The path to the target attribute being referenced",
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "items": {
            "type": "object",
            "description": "The order relations items, representing quotes or orders associated with the opportunity",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderRelation"
                }
              }
            }
          },
          "_org_id": {
            "type": "string",
            "description": "Organization Id the order belongs to"
          },
          "_id": {
            "type": "string",
            "description": "The opportunity id",
            "readOnly": true
          },
          "_created_at": {
            "type": "string",
            "description": "The opportunity creation date",
            "readOnly": true
          },
          "_updated_at": {
            "type": "string",
            "description": "The opportunity last update date",
            "readOnly": true
          },
          "source_type": {
            "type": "string",
            "description": "Type of source, e.g. journey or manual",
            "example": "journey"
          },
          "source_id": {
            "type": "string",
            "description": "Identifier for source e.g. journey ID",
            "example": "ce99875f-fba9-4fe2-a8f9-afaf52059051"
          },
          "source": {
            "$ref": "#/components/schemas/OpportunitySource"
          },
          "_tags": {
            "type": "array",
            "description": "An arbitrary set of tags attached to the opportunity",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "description": "The order entity",
        "additionalProperties": true,
        "properties": {
          "order_number": {
            "type": "string",
            "description": "The order number (customer facing)"
          },
          "cart_id": {
            "type": "string",
            "description": "The cart id that originated or is associated with the this order"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "source_type": {
            "type": "string",
            "description": "Type of source, e.g. journey or manual",
            "example": "journey"
          },
          "source_id": {
            "type": "string",
            "description": "Identifier for source e.g. journey ID",
            "example": "ce99875f-fba9-4fe2-a8f9-afaf52059051"
          },
          "source": {
            "$ref": "#/components/schemas/OrderSource"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "customer": {
            "type": "object",
            "description": "A list of customers related with the opportunity",
            "properties": {
              "$relation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityRelation"
                }
              }
            }
          },
          "billing_first_name": {
            "type": "string",
            "description": "The billing contact first name"
          },
          "billing_last_name": {
            "type": "string",
            "description": "The billing contact last name"
          },
          "billing_company_name": {
            "type": "string",
            "description": "The billing account name"
          },
          "billing_vat": {
            "type": "string",
            "description": "The billing account VAT"
          },
          "billing_email": {
            "type": "string",
            "description": "The billing email"
          },
          "billing_phone": {
            "type": "string",
            "description": "The billing phone"
          },
          "billing_address": {
            "type": "array",
            "description": "The billing address",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "currency": {
            "description": "The order main currency",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "delivery_address": {
            "type": "array",
            "description": "The delivery address",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "payment_method": {
            "type": "array",
            "description": "The payment method details for the order",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "line_items": {
            "$ref": "#/components/schemas/PriceItems"
          },
          "amount_subtotal": {
            "readOnly": true,
            "type": "integer",
            "description": "Total of all items before (discounts or) taxes are applied."
          },
          "amount_total": {
            "readOnly": true,
            "type": "integer",
            "description": "Total of all items after (discounts and) taxes are applied."
          },
          "total_details": {
            "$ref": "#/components/schemas/TotalDetails"
          },
          "_org_id": {
            "type": "string",
            "description": "Organization Id the order belongs to"
          },
          "_id": {
            "type": "string",
            "description": "The order id",
            "readOnly": true
          },
          "_created_at": {
            "type": "string",
            "description": "The order creation date",
            "readOnly": true
          },
          "_updated_at": {
            "type": "string",
            "description": "The order last update date",
            "readOnly": true
          },
          "_tags": {
            "type": "array",
            "description": "An arbitrary set of tags attached to the order",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Price": {
        "type": "object",
        "description": "The price configuration",
        "additionalProperties": true,
        "readOnly": true,
        "properties": {
          "active": {
            "type": "boolean"
          },
          "billing_scheme": {
            "type": "string",
            "enum": [
              "Per Unit"
            ]
          },
          "description": {
            "type": "string"
          },
          "sales_tax": {
            "$ref": "#/components/schemas/SalesTax"
          },
          "tax_behavior": {
            "type": "string",
            "enum": [
              "inclusive",
              "exclusive"
            ]
          },
          "tiers_mode": {
            "type": "string",
            "enum": [
              "Standard"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "one_time",
              "recurring"
            ]
          },
          "billing_period": {
            "$ref": "#/components/schemas/BillingPeriod"
          },
          "unit_amount": {
            "type": "number"
          },
          "unit_amount_decimal": {
            "type": "string"
          },
          "unit_amount_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "billing_duration_amount": {
            "type": "number"
          },
          "billing_duration_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "notice_time_amount": {
            "type": "number"
          },
          "notice_time_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "termination_time_amount": {
            "type": "number"
          },
          "termination_time_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "renewal_duration_amount": {
            "type": "number"
          },
          "renewal_duration_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "_created_at": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "_title": {
            "type": "string"
          },
          "_updated_at": {
            "type": "string"
          }
        }
      },
      "PriceBundle": {
        "type": "object",
        "description": "The price configuration",
        "additionalProperties": true,
        "readOnly": true,
        "properties": {
          "active": {
            "type": "boolean"
          },
          "billing_scheme": {
            "type": "string",
            "enum": [
              "Per Unit"
            ]
          },
          "description": {
            "type": "string"
          },
          "sales_tax": {
            "$ref": "#/components/schemas/SalesTax"
          },
          "tax_behavior": {
            "type": "string",
            "enum": [
              "inclusive",
              "exclusive"
            ]
          },
          "tiers_mode": {
            "type": "string",
            "enum": [
              "Standard"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "one_time",
              "recurring"
            ]
          },
          "billing_period": {
            "$ref": "#/components/schemas/BillingPeriod"
          },
          "unit_amount": {
            "type": "number"
          },
          "unit_amount_decimal": {
            "type": "string"
          },
          "unit_amount_currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "billing_duration_amount": {
            "type": "number"
          },
          "billing_duration_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "notice_time_amount": {
            "type": "number"
          },
          "notice_time_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "termination_time_amount": {
            "type": "number"
          },
          "termination_time_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "renewal_duration_amount": {
            "type": "number"
          },
          "renewal_duration_unit": {
            "type": "string",
            "enum": [
              "weeks",
              "months",
              "years"
            ]
          },
          "_created_at": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "_title": {
            "type": "string"
          },
          "_updated_at": {
            "type": "string"
          }
        }
      },
      "MetaData": {
        "description": "A set of key-value pairs used to store meta data information about an entity.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "object",
              "description": "Key value pair entry",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Item key"
                },
                "value": {
                  "type": "string",
                  "description": "Item value"
                }
              }
            }
          ]
        }
      },
      "CatalogSearch": {
        "description": "A catalog search payload",
        "type": "object",
        "properties": {
          "q": {
            "description": "The query to perform using lucene query syntax.",
            "type": "string"
          },
          "sort": {
            "description": "The sort expression to sort the results.",
            "type": "string"
          },
          "from": {
            "description": "The index from which to query, used for pagination purposes. Defaults to 0",
            "type": "number"
          },
          "size": {
            "description": "The max size of the response, defaults to 2000.",
            "type": "number"
          },
          "hydrate": {
            "type": "boolean",
            "description": "When true, enables entity hydration to resolve nested $relation references in-place.",
            "default": false
          },
          "availability": {
            "$ref": "#/components/schemas/AvailabilityFilters"
          }
        },
        "example": {
          "q": "_id:1233432 OR _id:123432454 OR _id:23445433",
          "sort": "description ASC",
          "from": 0,
          "size": 200,
          "availability": {
            "location": {
              "postal_code": "57008,",
              "city": "Cologne,",
              "street": "Media Park,",
              "street_number": "8a"
            },
            "available_date": {
              "value": "2022-05-01"
            }
          }
        },
        "required": [
          "q"
        ]
      },
      "CatalogSearchResult": {
        "description": "The query result payload",
        "type": "object",
        "properties": {
          "hits": {
            "type": "number",
            "description": "The number os results returned."
          },
          "results": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Product"
                },
                {
                  "$ref": "#/components/schemas/Price"
                }
              ]
            }
          }
        },
        "example": {
          "hits": 2,
          "results": [
            {
              "schema": "product",
              "description": "product a"
            },
            {
              "schema": "price",
              "unit_amount_decimal": "124.342343434"
            }
          ]
        }
      },
      "AvailabilityCheckParams": {
        "description": "Availability check request payload",
        "type": "object",
        "properties": {
          "products": {
            "description": "Products to check availability",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Product under availability check"
            }
          },
          "filters": {
            "$ref": "#/components/schemas/AvailabilityFilters"
          }
        },
        "required": [
          "products",
          "filters"
        ]
      },
      "AvailabilityResult": {
        "description": "The availability check result payload",
        "type": "object",
        "properties": {
          "available_products": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Available Products"
            }
          },
          "check_results": {
            "description": "The check result details",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "matching_hits": {
                  "description": "The number of rules matched",
                  "type": "number"
                },
                "matching_error": {
                  "description": "A set of matching errors when checking availability",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "required": [
                "product_id"
              ]
            }
          }
        },
        "required": [
          "available_products"
        ],
        "example": {
          "available_products": [],
          "check_results": [
            {
              "product_id": "my-product-id-123-1",
              "matching_hits": 0
            },
            {
              "product_id": "my-product-id-123-2",
              "matching_hits": 0
            }
          ]
        }
      },
      "CartDto": {
        "description": "A valid cart payload from a client.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "delivery_address": {
            "$ref": "#/components/schemas/Address"
          },
          "source_type": {
            "type": "string",
            "description": "type of source, e.g. journey or manual",
            "example": "journey"
          },
          "source_id": {
            "type": "string",
            "description": "identifier for source e.g. journey ID",
            "example": "ce99875f-fba9-4fe2-a8f9-afaf52059051"
          },
          "source": {
            "$ref": "#/components/schemas/OrderSource"
          },
          "additional_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "line_items": {
            "$ref": "#/components/schemas/PriceItemsDto"
          },
          "files": {
            "type": "array",
            "description": "An array of file IDs, already upload into the File API, that are related with this cart",
            "items": {
              "type": "string",
              "description": "a string representing a file ID as received from the File API"
            }
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "journey_data": {
            "type": "object",
            "additionalProperties": true
          },
          "consents": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "line_items"
        ]
      },
      "CheckoutCart": {
        "type": "object",
        "description": "The cart checkout request payload",
        "properties": {
          "cart": {
            "anyOf": [
              {
                "description": "the cart id",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/CartDto"
              }
            ]
          },
          "mode": {
            "$ref": "#/components/schemas/CheckoutMode"
          }
        }
      },
      "CheckoutCartResult": {
        "type": "object",
        "description": "The cart checkout result",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "CheckoutMode": {
        "type": "string",
        "description": "The checkout mode for the cart checkout.",
        "enum": [
          "create_order",
          "create_invoice",
          "create_quote"
        ]
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "draft",
          "quote",
          "placed",
          "cancelled",
          "completed"
        ],
        "description": "\n| status      | description |\n|-------------|-------|\n| `draft`     | ​​Starting state for all orders, at this point we can still edit the order |\n| `quote`     | The order is in a quoting phase, bound to an expiration date |\n| `placed`    | The order has been paid and can now be fulfilled (shipped, delivered, complete) or canceled |\n| `cancelled` | The order has been cancelled |\n| `completed` | The order is now closed and finalized |\n"
      },
      "PriceItemsDto": {
        "description": "A valid set of product prices, quantities, (discounts) and taxes from a client.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/PriceItemDto"
            }
          ]
        }
      },
      "PriceItemDto": {
        "description": "Represents a valid price item from a client.",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of products being purchased."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the price item. Often useful for displaying to users. Defaults to product name."
          },
          "product_id": {
            "type": "string",
            "description": "The id of the product."
          },
          "price_id": {
            "type": "string",
            "description": "The id of the price."
          },
          "taxes": {
            "type": "array",
            "description": "The taxes applied to the price item.",
            "readOnly": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TaxAmountDto"
                }
              ]
            }
          },
          "recurrences": {
            "type": "array",
            "description": "The taxes applied to the price item.",
            "readOnly": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RecurrenceAmountDto"
                }
              ]
            }
          },
          "_price": {
            "$ref": "#/components/schemas/Price"
          },
          "_product": {
            "description": "The product linked to the price item.",
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "TaxAmountDto": {
        "type": "object",
        "description": "A valid tax rate from a client.",
        "properties": {
          "rate": {
            "type": "string",
            "description": "The tax rate applied."
          },
          "tax": {
            "description": "The tax applied.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Tax"
              }
            ]
          }
        }
      },
      "OrderSource": {
        "type": "object",
        "description": "The order generation source",
        "properties": {
          "http": {
            "type": "string",
            "description": "Link path for the source",
            "example": "/app/v2/journey-builder/editor/db7f6940-994b-11ec-a46d-9f1824ff2939"
          },
          "title": {
            "type": "string",
            "description": "Title for the source",
            "example": "Journey: PH Journey"
          }
        }
      },
      "OpportunitySource": {
        "type": "object",
        "description": "The opportunity generation source",
        "properties": {
          "http": {
            "type": "string",
            "description": "Link path for the source",
            "example": "/app/v2/journey-builder/editor/db7f6940-994b-11ec-a46d-9f1824ff2939"
          },
          "title": {
            "type": "string",
            "description": "Title for the source",
            "example": "Journey: PH Journey"
          }
        }
      },
      "RecurrenceAmountDto": {
        "type": "object",
        "description": "An amount associated with a specific recurrence.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The price type."
          },
          "billing_period": {
            "type": "string",
            "description": "The price billing period."
          },
          "amount_subtotal": {
            "type": "integer",
            "description": "Total of all items, with same recurrence, before (discounts or) taxes are applied."
          },
          "amount_total": {
            "type": "integer",
            "description": "Total of all items, with same recurrence, after (discounts and) taxes are applied."
          },
          "amount_tax": {
            "type": "integer",
            "description": "Total of all items taxes, with same recurrence."
          }
        },
        "required": [
          "type",
          "amount_subtotal",
          "amount_total"
        ]
      },
      "Cart": {
        "description": "Supports shopping for products and services until ready for checkout.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The cart identifier"
          },
          "org_id": {
            "type": "string",
            "description": "The user's Organization Id the cart belongs to",
            "readOnly": true
          },
          "status": {
            "enum": [
              "open",
              "complete",
              "expired"
            ],
            "type": "string",
            "readOnly": true,
            "description": "The status of the Cart:\n- open - the cart checkout is still in progress. Payment processing has not started\n- complete - the cart checkout is complete. Payment processing may still be in progress\n- expired - the cart checkout has expired. No further processing will occur\n"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "delivery_address": {
            "$ref": "#/components/schemas/Address"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "line_items": {
            "$ref": "#/components/schemas/PriceItems"
          },
          "amount_subtotal": {
            "readOnly": true,
            "type": "integer",
            "description": "Total of all items before (discounts or) taxes are applied."
          },
          "amount_total": {
            "readOnly": true,
            "type": "integer",
            "description": "Total of all items after (discounts and) taxes are applied."
          },
          "total_details": {
            "$ref": "#/components/schemas/TotalDetails"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Currency": {
        "type": "string",
        "description": "Three-letter ISO currency code, in lowercase. Must be a supported currency.\nISO 4217 CURRENCY CODES as specified in the documentation: https://www.iso.org/iso-4217-currency-codes.html\n",
        "example": "EUR"
      },
      "OrderRelation": {
        "type": "object",
        "description": "An order relation reference",
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "The relation order id"
          },
          "_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The tags array associated with the relation"
            }
          }
        }
      },
      "OrderPayload": {
        "type": "object",
        "description": "Order Entity Payload",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "line_items": {
            "$ref": "#/components/schemas/PriceItems"
          },
          "source_type": {
            "type": "string",
            "description": "type of source, e.g. journey or manual",
            "example": "journey"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "contact": {
            "readOnly": true,
            "type": "string",
            "description": "The id of an existing contact."
          },
          "billing_first_name": {
            "type": "string"
          },
          "billing_last_name": {
            "type": "string"
          },
          "billing_company_name": {
            "type": "string"
          },
          "billing_vat": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "delivery_address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "payment_method": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PriceItems": {
        "description": "Tracks a set of product prices, quantities, (discounts) and taxes.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/PriceItem"
            }
          ]
        }
      },
      "PriceItem": {
        "description": "Represents a price item",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "price item id",
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "unit_amount": {
            "type": "integer",
            "description": "The unit amount value",
            "readOnly": true
          },
          "amount_subtotal": {
            "type": "integer",
            "description": "Total before any (discounts or) taxes are applied.",
            "readOnly": true
          },
          "unit_amount_net": {
            "type": "integer",
            "description": "Net unit amount without taxes or discounts.",
            "readOnly": true
          },
          "amount_total": {
            "type": "integer",
            "description": "Total after (discounts and) taxes.",
            "readOnly": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the price item. Often useful for displaying to users. Defaults to product name."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of products being purchased."
          },
          "product_id": {
            "type": "string",
            "description": "The id of the product."
          },
          "price_id": {
            "type": "string",
            "description": "The id of the price."
          },
          "_price": {
            "description": "The price snapshot data.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          },
          "_product": {
            "description": "The product snapshot data.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Product"
              }
            ]
          },
          "taxes": {
            "type": "array",
            "description": "The taxes applied to the price item.",
            "readOnly": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TaxAmount"
                }
              ]
            }
          },
          "recurrences": {
            "type": "array",
            "description": "The sum of amounts of the price items by recurrence.",
            "readOnly": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RecurrenceAmount"
                }
              ]
            }
          }
        }
      },
      "TaxAmount": {
        "type": "object",
        "description": "A tax amount associated with a specific tax rate.",
        "readOnly": true,
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The tax amount."
          },
          "rate": {
            "type": "string",
            "description": "The tax rate applied."
          },
          "tax": {
            "description": "The tax applied.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Tax"
              }
            ]
          }
        }
      },
      "RecurrenceAmount": {
        "type": "object",
        "description": "An amount associated with a specific recurrence.",
        "readOnly": true,
        "properties": {
          "type": {
            "type": "string",
            "description": "The price type."
          },
          "billing_period": {
            "type": "string",
            "description": "The price billing period."
          },
          "amount_subtotal": {
            "type": "integer",
            "description": "Total of all items, with same recurrence, before (discounts or) taxes are applied."
          },
          "amount_total": {
            "type": "integer",
            "description": "Total of all items, with same recurrence, after (discounts and) taxes are applied."
          },
          "amount_tax": {
            "type": "integer",
            "description": "Total of all items taxes, with same recurrence."
          }
        },
        "required": [
          "type",
          "amount_subtotal",
          "amount_total"
        ]
      },
      "TotalDetails": {
        "type": "object",
        "description": "The total details with tax (and discount) aggregated totals.",
        "readOnly": true,
        "properties": {
          "amount_shipping": {
            "type": "integer",
            "description": "This is the sum of all the price item shipping amounts."
          },
          "amount_tax": {
            "type": "integer",
            "description": "This is the sum of all the price item tax amounts."
          },
          "breakdown": {
            "type": "object",
            "description": "Breakdown of individual tax (and discount) amounts that add up to the totals.",
            "properties": {
              "taxes": {
                "type": "array",
                "description": "The aggregated price items tax amount per rate.",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxAmount"
                    }
                  ]
                }
              },
              "recurrences": {
                "type": "array",
                "description": "The aggregated price items tax amount per rate.",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RecurrenceAmount"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "PricingDetails": {
        "type": "object",
        "description": "The result from the calculation of a set of price items.",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceItem"
                }
              ]
            }
          },
          "amount_subtotal": {
            "type": "integer",
            "description": "Total of all items before (discounts or) taxes are applied."
          },
          "amount_total": {
            "type": "integer",
            "description": "Total of all items after (discounts and) taxes are applied."
          },
          "total_details": {
            "$ref": "#/components/schemas/TotalDetails"
          }
        }
      },
      "BillingPeriod": {
        "type": "string",
        "enum": [
          "weekly",
          "monthly",
          "every_quarter",
          "every_6_months",
          "yearly",
          "one_time"
        ]
      },
      "SalesTax": {
        "type": "string",
        "enum": [
          "nontaxable",
          "reduced",
          "standard"
        ]
      },
      "AvailabilityLocation": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "The first line of the address. Typically the street address or PO Box number."
          },
          "street_number": {
            "type": "string",
            "description": "The second line of the address. Typically the number of the apartment, suite, or unit."
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the address."
          },
          "city": {
            "type": "string",
            "description": "The name of the city, district, village, or town."
          },
          "country": {
            "type": "string",
            "description": "The name of the country."
          }
        }
      },
      "AvailabilityDate": {
        "type": "object",
        "properties": {
          "available_start_date": {
            "type": "string",
            "format": "date",
            "description": "The availability interval start date",
            "example": "2017-07-21"
          },
          "available_end_date": {
            "type": "string",
            "format": "date",
            "description": "The availability interval end date",
            "example": "2017-07-21"
          }
        }
      },
      "AvailabilityFilters": {
        "description": "Availability filters dimensions",
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/AvailabilityLocation"
          },
          "available_date": {
            "type": "string",
            "format": "date",
            "example": "2017-07-21",
            "description": "A value to be matched against the availability window (start & end date)"
          }
        },
        "required": [
          "location"
        ]
      },
      "Address": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "billing"
            ]
          },
          "street": {
            "type": "string",
            "description": "The first line of the address. Typically the street address or PO Box number."
          },
          "street_number": {
            "type": "string",
            "description": "The second line of the address. Typically the number of the apartment, suite, or unit."
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the address."
          },
          "city": {
            "type": "string",
            "description": "The name of the city, district, village, or town."
          },
          "country": {
            "type": "string",
            "description": "The two-letter code for the country of the address."
          },
          "additional_info": {
            "type": "string",
            "description": "An additional description for the address"
          },
          "company_name": {
            "type": "string",
            "description": "the company name, usually used as extra delivery instructions"
          },
          "first_name": {
            "type": "string",
            "description": "the first name of the recipient, usually used as extra delivery instructions"
          },
          "last_name": {
            "type": "string",
            "description": "the last name of the recipient, usually used as extra delivery instructions"
          },
          "salutation": {
            "type": "string",
            "description": "the salutation of the recipient, usually used as extra delivery instructions"
          },
          "title": {
            "type": "string",
            "description": "the title of the recipient, usually used as extra delivery instructions"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "description": "A PaymentMethod represent your customer's payment instruments.\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the PaymentMethod."
          },
          "details": {
            "type": "object",
            "description": "Contains relevant data associated with the payment method type.",
            "additionalProperties": true
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "vat_id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "description": "A valid email identifying the customer."
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "File": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "_id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "mime_type": {
            "type": "string"
          },
          "versions": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "s3ref": {
                  "type": "object",
                  "properties": {
                    "bucket": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "bucket",
                    "key"
                  ]
                }
              },
              "required": [
                "s3ref"
              ]
            }
          },
          "_schema": {
            "type": "string"
          },
          "_org": {
            "type": "string"
          },
          "_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "_title": {
            "type": "string"
          },
          "$relation": {
            "$ref": "#/components/schemas/EntityRelation"
          }
        },
        "required": [
          "versions",
          "_id",
          "_schema",
          "_created_at",
          "_updated_at",
          "_org",
          "mime_type",
          "filename"
        ]
      },
      "EntityRelation": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "entity_id": {
            "type": "string"
          },
          "_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Tax": {
        "type": "object",
        "description": "the tax configuration",
        "additionalProperties": true,
        "required": [
          "type",
          "rate",
          "behavior"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "VAT",
              "GST",
              "Custom"
            ]
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "behavior": {
            "type": "string",
            "enum": [
              "Exclusive",
              "Inclusive"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "region": {
            "type": "string"
          },
          "region_label": {
            "type": "string"
          }
        }
      }
    },
    "examples": {
      "checkout-with-cart-id": {
        "value": {
          "mode": "create_order",
          "cart": "pZ324jnndf"
        }
      },
      "checkout-with-transient-cart": {
        "value": {
          "mode": "create_order",
          "cart": {
            "metadata": [
              {
                "key": "journey-id",
                "value": "8d0a2235-97ce-42d0-88a3-e374634ca44e"
              }
            ],
            "customer": {
              "first_name": "john",
              "last_name": "doe",
              "company_name": "company limited",
              "vat_id": "123892321",
              "email": "johndoe@company.com",
              "phone": "+44233242423"
            },
            "billing_address": {
              "street1": "wallstreet",
              "street2": 1,
              "city": "new york city",
              "country": "united states",
              "country_code": "US",
              "additional_info": "headquarters office"
            },
            "delivery_address": {
              "street1": "berverly hills avenue",
              "street2": "block 1",
              "city": "berverly hills",
              "country": "california",
              "country_code": "CA",
              "additional_info": "remote cowork place"
            },
            "line_items": [
              {
                "quantity": 1,
                "product": "b7185fb7-b10f-4875-bda7-288631446555",
                "price": "df240bab-9f71-4a9a-a9e1-59f18827dbf9"
              },
              {
                "quantity": 1,
                "product": "zzzzzz-b10f-4875-bda7-288631446555",
                "price": "zzzzz-9f71-4a9a-a9e1-59f18827dbf9"
              }
            ],
            "files": [
              "xf240bab-9f71-4a9a-a9e1-59f18827dbf9",
              "yf240bab-9f71-4a9a-a9e1-59f18827dbf9",
              "zf240bab-9f71-4a9a-a9e1-59f18827dbf9"
            ]
          }
        }
      },
      "checkout-result": {
        "value": {
          "order": {
            "_id": "d1ZoC1FwZ6",
            "type": "Draft",
            "cart_id": "p0ZoB1FwH6",
            "order_number": "20201021-234324",
            "_org_id": 123,
            "metadata": [
              {
                "key": "journey-id",
                "value": "8d0a2235-97ce-42d0-88a3-e374634ca44e"
              }
            ],
            "billing_first_name": "john",
            "billing_last_name": "doe",
            "billing_company_name": "i me and myself",
            "billing_vat": "234823948",
            "billing_email": "johndoe@nowhere.com",
            "currency": "EUR",
            "billing_phone": "+1234234545",
            "billing_address": "wallstreet, 1",
            "billing_contact": "villy or zilly",
            "line_items": [
              {
                "id": "mSjGCTfn8w",
                "metadata": [
                  {
                    "cart_id": "p0ZoB1FwH6"
                  }
                ],
                "description": "Wallbox Premium - Premium Price",
                "currency": "EUR",
                "unit_amount": 78900,
                "amount_subtotal": 50000,
                "amount_total": 61500,
                "quantity": 1,
                "product_id": "b7185fb7-b10f-4875-bda7-288631446555",
                "price_id": "df240bab-9f71-4a9a-a9e1-59f18827dbf9",
                "taxes": [
                  {
                    "amount": 11500,
                    "rate": "MwSt. 23%"
                  }
                ],
                "_price": {
                  "_id": "df240bab-9f71-4a9a-a9e1-59f18827dbf9",
                  "unit_amount": "€ 789",
                  "type": "one_time",
                  "active": true,
                  "sales_tax": "standard",
                  "tax_behavior": "inclusive",
                  "description": "Winter Sale",
                  "billing_scheme": "Per Unit",
                  "tiers_mode": "Standard",
                  "_created_at": "2021-11-10T18:02:58.318Z",
                  "_updated_at": "2021-11-10T18:02:58.318Z",
                  "_title": "Winter Sale"
                }
              },
              {
                "id": "mZkGCTfn6p",
                "metadata": [
                  {
                    "cart_id": "p0ZoB1FwH6"
                  }
                ],
                "description": "Wallbox Basic with Full Add-ons - Basic Price",
                "currency": "EUR",
                "unit_amount": 78900,
                "amount_subtotal": 50000,
                "amount_total": 53500,
                "quantity": 1,
                "product_id": "zzzzzz-b10f-4875-bda7-288631446555",
                "price_id": "zzzzz-9f71-4a9a-a9e1-59f18827dbf9",
                "taxes": [
                  {
                    "amount": 3500,
                    "rate": "MwSt. 7%"
                  }
                ],
                "_price": {
                  "_id": "zzzzz-9f71-4a9a-a9e1-59f18827dbf9",
                  "unit_amount": "€ 789",
                  "type": "one_time",
                  "active": true,
                  "sales_tax": "standard",
                  "tax_behavior": "inclusive",
                  "description": "Winter Sale",
                  "billing_scheme": "Per Unit",
                  "tiers_mode": "Standard",
                  "_created_at": "2021-11-10T18:02:58.318Z",
                  "_updated_at": "2021-11-10T18:02:58.318Z",
                  "_title": "Winter Sale"
                }
              }
            ],
            "amount_subtotal": 100000,
            "amount_total": 115000,
            "total_details": {
              "amount_shipping": 10000,
              "amount_tax": 15000,
              "breakdown": [
                {
                  "amount": 11500,
                  "rate": "MwSt. 23%"
                },
                {
                  "amount": 3500,
                  "rate": "MwSt. 7%"
                }
              ]
            },
            "_created_at": "2021-11-10T18:02:58.318Z",
            "_updated_at": "2021-11-10T18:02:58.318Z"
          }
        }
      },
      "order-with-simple-prices": {
        "value": {
          "order_number": "OR 2022/742701",
          "status": "quote",
          "source": {
            "title": "manual",
            "href": null
          },
          "source_type": "manual",
          "_schema": "order",
          "_title": "OR 2022/742701",
          "expires_at": "2022-06-30T16:17:00.000Z",
          "line_items": [
            {
              "price_id": "9c36c23b-1574-4193-beff-b1b5e1124bc7",
              "product_id": "a7f4771a-6368-4d77-bb01-71f1e4902de5",
              "taxes": [
                {
                  "tax": {
                    "_id": "24641e82-0690-4135-8b43-ef12a9b1c5dc",
                    "rate": "19",
                    "behavior": "Inclusive",
                    "_schema": "tax",
                    "_org": "728",
                    "_created_at": "2021-09-24T15:06:13.859Z",
                    "_updated_at": "2022-04-04T17:36:15.273Z",
                    "_title": "Tax Standard",
                    "type": "VAT",
                    "active": true,
                    "region": "DE",
                    "description": "Standard"
                  },
                  "amount": 255462
                }
              ],
              "_price": {
                "_id": "9c36c23b-1574-4193-beff-b1b5e1124bc7",
                "unit_amount": 100000,
                "unit_amount_currency": "EUR",
                "unit_amount_decimal": "1000",
                "sales_tax": "standard",
                "tax_behavior": "inclusive",
                "price_display_in_journeys": "show_price",
                "type": "one_time",
                "billing_period": "weekly",
                "billing_duration_unit": "months",
                "notice_time_unit": "months",
                "termination_time_unit": "months",
                "renewal_duration_unit": "months",
                "_schema": "price",
                "_title": "Solar Panel Module",
                "description": "Solar Panel Module",
                "active": true,
                "tax": {
                  "$relation": [
                    {
                      "entity_id": "24641e82-0690-4135-8b43-ef12a9b1c5dc"
                    }
                  ]
                },
                "_org": "728",
                "_created_at": "2022-06-03T16:04:10.369Z",
                "_updated_at": "2022-06-03T16:04:10.369Z"
              },
              "_product": {
                "_id": "a7f4771a-6368-4d77-bb01-71f1e4902de5",
                "type": "product",
                "_schema": "product",
                "_title": "Solar Panel with Battery Storage",
                "name": "Solar Panel with Battery Storage",
                "code": "SOLAR-BATT",
                "active": true,
                "description": "Solar Panel with battery solution, optimized for max efficiency. ",
                "feature": [
                  {
                    "_tags": [],
                    "feature": "Eco-Panels"
                  },
                  {
                    "_tags": [],
                    "feature": "Remote Management Platform"
                  },
                  {
                    "_tags": [],
                    "feature": "Battery Remote Control"
                  },
                  {
                    "_tags": [],
                    "feature": "Mobile App"
                  }
                ],
                "cross_sellable_products": {
                  "$relation": [
                    {
                      "entity_id": "068d0713-a650-4668-9ed2-eca7be31e337",
                      "_schema": "product",
                      "_tags": []
                    },
                    {
                      "entity_id": "c8402ee7-fba9-4f3d-bffd-6803ca655782",
                      "_tags": []
                    }
                  ]
                },
                "product_images": {
                  "$relation": [
                    {
                      "entity_id": "37bdeaaa-65fe-403e-9894-65b01cd277f1"
                    },
                    {
                      "entity_id": "56dde657-795c-41bb-bf53-98fd586b7e6e"
                    }
                  ]
                },
                "product_downloads": {
                  "$relation": [
                    {
                      "entity_id": "64211361-8759-414b-81c0-afbf24f83aa9"
                    }
                  ]
                },
                "_org": "728",
                "_created_at": "2022-06-03T15:52:27.512Z",
                "_updated_at": "2022-06-03T16:05:15.029Z",
                "price_options": {
                  "$relation": [
                    {
                      "entity_id": "9c36c23b-1574-4193-beff-b1b5e1124bc7",
                      "_tags": []
                    },
                    {
                      "entity_id": "146aa2cc-f267-4d5e-bda4-cbe2669b7741",
                      "_tags": []
                    }
                  ]
                }
              },
              "quantity": 16,
              "currency": "EUR",
              "description": "Solar Panel Module",
              "unit_amount": 100000,
              "unit_amount_net": 84034,
              "amount_subtotal": 1344538,
              "amount_total": 1600000
            },
            {
              "price_id": "146aa2cc-f267-4d5e-bda4-cbe2669b7741",
              "product_id": "a7f4771a-6368-4d77-bb01-71f1e4902de5",
              "taxes": [
                {
                  "tax": {
                    "_id": "24641e82-0690-4135-8b43-ef12a9b1c5dc",
                    "rate": "19",
                    "behavior": "Inclusive",
                    "_schema": "tax",
                    "_org": "728",
                    "_created_at": "2021-09-24T15:06:13.859Z",
                    "_updated_at": "2022-04-04T17:36:15.273Z",
                    "_title": "Tax Standard",
                    "type": "VAT",
                    "active": true,
                    "region": "DE",
                    "description": "Standard"
                  },
                  "amount": 31933
                }
              ],
              "_price": {
                "_id": "146aa2cc-f267-4d5e-bda4-cbe2669b7741",
                "unit_amount": 50000,
                "unit_amount_currency": "EUR",
                "unit_amount_decimal": "500",
                "sales_tax": "standard",
                "tax_behavior": "inclusive",
                "price_display_in_journeys": "show_price",
                "type": "one_time",
                "billing_period": "weekly",
                "billing_duration_unit": "months",
                "notice_time_unit": "months",
                "termination_time_unit": "months",
                "renewal_duration_unit": "months",
                "_schema": "price",
                "_title": "Battery Module 500amps",
                "description": "Battery Module 500amps",
                "active": true,
                "tax": {
                  "$relation": [
                    {
                      "entity_id": "24641e82-0690-4135-8b43-ef12a9b1c5dc"
                    }
                  ]
                },
                "_org": "728",
                "_created_at": "2022-06-03T16:05:04.391Z",
                "_updated_at": "2022-06-03T16:05:04.391Z"
              },
              "_product": {
                "_id": "a7f4771a-6368-4d77-bb01-71f1e4902de5",
                "type": "product",
                "_schema": "product",
                "_title": "Solar Panel with Battery Storage",
                "name": "Solar Panel with Battery Storage",
                "code": "SOLAR-BATT",
                "active": true,
                "description": "Solar Panel with battery solution, optimized for max efficiency. ",
                "feature": [
                  {
                    "_tags": [],
                    "feature": "Eco-Panels"
                  },
                  {
                    "_tags": [],
                    "feature": "Remote Management Platform"
                  },
                  {
                    "_tags": [],
                    "feature": "Battery Remote Control"
                  },
                  {
                    "_tags": [],
                    "feature": "Mobile App"
                  }
                ],
                "cross_sellable_products": {
                  "$relation": [
                    {
                      "entity_id": "068d0713-a650-4668-9ed2-eca7be31e337",
                      "_schema": "product",
                      "_tags": []
                    },
                    {
                      "entity_id": "c8402ee7-fba9-4f3d-bffd-6803ca655782",
                      "_tags": []
                    }
                  ]
                },
                "product_images": {
                  "$relation": [
                    {
                      "entity_id": "37bdeaaa-65fe-403e-9894-65b01cd277f1"
                    },
                    {
                      "entity_id": "56dde657-795c-41bb-bf53-98fd586b7e6e"
                    }
                  ]
                },
                "product_downloads": {
                  "$relation": [
                    {
                      "entity_id": "64211361-8759-414b-81c0-afbf24f83aa9"
                    }
                  ]
                },
                "_org": "728",
                "_created_at": "2022-06-03T15:52:27.512Z",
                "_updated_at": "2022-06-03T16:05:15.029Z",
                "price_options": {
                  "$relation": [
                    {
                      "entity_id": "9c36c23b-1574-4193-beff-b1b5e1124bc7",
                      "_tags": []
                    },
                    {
                      "entity_id": "146aa2cc-f267-4d5e-bda4-cbe2669b7741",
                      "_tags": []
                    }
                  ]
                }
              },
              "quantity": 4,
              "currency": "EUR",
              "description": "Battery Module 500amps",
              "unit_amount": 50000,
              "unit_amount_net": 42017,
              "amount_subtotal": 168067,
              "amount_total": 200000
            },
            {
              "price_id": "d88a8763-3e3d-4fc7-a7a5-2bc9117148bf",
              "product_id": "065d6618-cc59-45f4-8e3a-700edf6813c3",
              "_price": {
                "_id": "d88a8763-3e3d-4fc7-a7a5-2bc9117148bf",
                "unit_amount": 12055,
                "type": "recurring",
                "billing_period": "monthly",
                "billing_duration_amount": "8",
                "billing_duration_unit": "years",
                "notice_time_amount": "3",
                "notice_time_unit": "months",
                "termination_time_amount": "2",
                "termination_time_unit": "months",
                "renewal_duration_amount": "1",
                "renewal_duration_unit": "years",
                "active": true,
                "sales_tax": "reduced",
                "tax_behavior": "inclusive",
                "description": "Monthly",
                "billing_scheme": "Per Unit",
                "tiers_mode": "Standard",
                "_schema": "price",
                "_org": "728",
                "_created_at": "2021-11-10T14:40:27.695Z",
                "_updated_at": "2021-12-14T18:16:33.248Z",
                "_title": "Monthly",
                "unit_amount_currency": "EUR",
                "unit_amount_decimal": "120.55456634"
              },
              "_product": {
                "_id": "065d6618-cc59-45f4-8e3a-700edf6813c3",
                "name": "Smartmeter: Schneider Electric PM5000 LCD Energiemessgerät / 3-phasig",
                "code": "1312378123",
                "_tags": [
                  "wallbox",
                  "review demo",
                  "1"
                ],
                "categories": [
                  "Power"
                ],
                "type": "product",
                "active": true,
                "feature": [
                  {
                    "_tags": [],
                    "feature": "Bis zu 11 kW Ladeleistung (5x schneller laden)"
                  },
                  {
                    "_tags": [],
                    "feature": "Integrierter MID Zähler für eine kilowattstundengenaue Abrechnung*"
                  },
                  {
                    "_tags": [],
                    "feature": "Konfigurierbare Ladeleistung"
                  },
                  {
                    "_tags": [],
                    "feature": "Zugangskontrolle über RFID-Karten"
                  },
                  {
                    "_tags": [],
                    "feature": "Kommunikation über LAN"
                  },
                  {
                    "_tags": [],
                    "feature": "New feature"
                  }
                ],
                "_schema": "product",
                "_org": "728",
                "_created_at": "2021-11-30T11:05:19.484Z",
                "_updated_at": "2022-01-13T09:18:29.944Z",
                "_title": "Smartmeter: Schneider Electric PM5000 LCD Energiemessgerät / 3-phasig",
                "price_options": {
                  "$relation": [
                    {
                      "entity_id": "5264b089-fc6a-4a91-9a2a-80c673958faa"
                    },
                    {
                      "entity_id": "d88a8763-3e3d-4fc7-a7a5-2bc9117148bf"
                    }
                  ]
                },
                "product_images": {
                  "$relation": [
                    {
                      "entity_id": "16729e60-c527-44ef-93c9-c68b6acf1224"
                    }
                  ]
                }
              },
              "quantity": 1,
              "currency": "EUR",
              "description": "Monthly",
              "unit_amount": 12055,
              "unit_amount_net": 11267,
              "amount_subtotal": 11267,
              "amount_total": 12055,
              "taxes": [
                {
                  "rate": "reduced",
                  "amount": 789
                }
              ]
            },
            {
              "price_id": "e1ddf75a-d0d1-40b4-a07e-56e292867c88",
              "product_id": "5b9f05b7-f0f8-49c2-8a8d-0f8f923d6382",
              "_price": {
                "_id": "e1ddf75a-d0d1-40b4-a07e-56e292867c88",
                "unit_amount": 9900,
                "unit_amount_currency": "EUR",
                "unit_amount_decimal": "99",
                "sales_tax": "standard",
                "tax_behavior": "inclusive",
                "price_display_in_journeys": "show_price",
                "type": "recurring",
                "billing_period": "yearly",
                "billing_duration_unit": "months",
                "notice_time_unit": "months",
                "termination_time_unit": "months",
                "renewal_duration_unit": "months",
                "_schema": "price",
                "_title": "Yearly payment",
                "description": "Yearly payment",
                "active": true,
                "_org": "728",
                "_created_at": "2022-02-07T22:58:39.884Z",
                "_updated_at": "2022-02-07T22:58:39.884Z"
              },
              "_product": {
                "_id": "5b9f05b7-f0f8-49c2-8a8d-0f8f923d6382",
                "_schema": "product",
                "_title": "Yearly Payment Product",
                "name": "Yearly Payment Product",
                "type": "product",
                "active": true,
                "price_options": {
                  "$relation": [
                    {
                      "entity_id": "e1ddf75a-d0d1-40b4-a07e-56e292867c88",
                      "_tags": []
                    }
                  ]
                },
                "_org": "728",
                "_created_at": "2022-02-07T22:58:44.162Z",
                "_updated_at": "2022-02-08T09:34:08.026Z",
                "description": "Hier steht die Produktbeschreibung die sich auf dem Dokument, was generiert wird, gezogen wird."
              },
              "quantity": 1,
              "currency": "EUR",
              "description": "Yearly payment",
              "unit_amount": 9900,
              "unit_amount_net": 8319,
              "amount_subtotal": 8319,
              "amount_total": 9900,
              "taxes": [
                {
                  "rate": "standard",
                  "amount": 1581
                }
              ]
            }
          ],
          "amount_subtotal": 1532191,
          "amount_total": 1821955,
          "total_details": {
            "amount_tax": 289764,
            "breakdown": {
              "taxes": [
                {
                  "tax": {
                    "_id": "24641e82-0690-4135-8b43-ef12a9b1c5dc",
                    "rate": "19",
                    "behavior": "Inclusive",
                    "_schema": "tax",
                    "_org": "728",
                    "_created_at": "2021-09-24T15:06:13.859Z",
                    "_updated_at": "2022-04-04T17:36:15.273Z",
                    "_title": "Tax Standard",
                    "type": "VAT",
                    "active": true,
                    "region": "DE",
                    "description": "Standard"
                  },
                  "amount": 287395
                }
              ],
              "recurrences": [
                {
                  "type": "one_time",
                  "amount_subtotal": 1512605,
                  "amount_total": 1800000,
                  "amount_tax": 287395
                },
                {
                  "type": "recurring",
                  "billing_period": "monthly",
                  "amount_subtotal": 11267,
                  "amount_total": 12055,
                  "amount_tax": 789
                },
                {
                  "type": "recurring",
                  "billing_period": "yearly",
                  "amount_subtotal": 8319,
                  "amount_total": 9900,
                  "amount_tax": 1581
                }
              ]
            }
          },
          "currency": "EUR",
          "payment_method": [
            {
              "type": "IBAN",
              "details": {}
            }
          ],
          "billing_contact": {
            "$relation": [
              {
                "entity_id": "1834a54e-b68f-4f7f-a98a-fe16f11bc2a5",
                "_tags": []
              }
            ]
          },
          "billing_first_name": "Joao",
          "billing_last_name": "Pinho",
          "billing_email": "j.pinho@epilot.cloud",
          "billing_company_name": "epilot cloud",
          "billing_address": [
            {
              "_tags": [],
              "street": "Im Media Park",
              "street_number": "8a",
              "postal_code": "52000",
              "city": "Cologne",
              "country": "DE",
              "additional_info": ""
            }
          ],
          "delivery_address": [],
          "dates": [
            {
              "_tags": [
                "Instalation Date"
              ],
              "dates": "",
              "value": "2022-06-30T16:29:00.000Z"
            }
          ],
          "_id": "4c7c9562-f8f0-4af0-a3a6-6aebc5571a6e",
          "_org": "728",
          "_created_at": "2022-06-03T16:29:46.303Z",
          "_updated_at": "2022-06-03T16:29:46.303Z"
        }
      },
      "order-with-price-bundles": {
        "value": {
          "metadata": [
            {
              "key": "_origin",
              "value": "journey checkout"
            }
          ],
          "_tags": [
            "journey",
            "automation"
          ],
          "status": "quote",
          "order_number": "OREabZxnO",
          "billing_first_name": "Paulo",
          "billing_last_name": "Henriques",
          "billing_email": "ph@ph1.pt",
          "billing_address": [
            {
              "street": "Bernauer Str.",
              "street_number": "1",
              "city": "Berlin",
              "postal_code": "10115",
              "country": "DE",
              "additional_info": "1"
            }
          ],
          "delivery_address": [
            {
              "street": "Bernauer Str.",
              "street_number": "1",
              "city": "Berlin",
              "postal_code": "10115",
              "country": "DE",
              "additional_info": "1"
            }
          ],
          "payment_method": [
            {
              "type": "BankTransfer",
              "details": {
                "label": "Überweisung"
              }
            }
          ],
          "currency": "EUR",
          "line_items": [
            {
              "product_id": "73f857a4-0fbc-4aa6-983f-87c0d6d410a6",
              "price_id": "c2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
              "quantity": 3,
              "currency": "EUR",
              "item_components": [
                {
                  "price_id": "comp1-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                  "product_id": "target-price-product-id",
                  "quantity": 3,
                  "unit_amount": 15000,
                  "unit_amount_currency": "EUR",
                  "unit_amount_decimal": "150.00",
                  "amount_subtotal": 45000,
                  "amount_total": 47700,
                  "taxes": [
                    {
                      "tax": {
                        "_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4",
                        "type": "VAT",
                        "behavior": "Exclusive",
                        "active": true,
                        "region": "DE",
                        "_schema": "tax",
                        "_title": "Tax Without Behaviour",
                        "description": "Without Behaviour",
                        "rate": "6",
                        "_org": "739224",
                        "_created_at": "2022-02-07T14:49:08.831Z",
                        "_updated_at": "2022-02-07T14:49:08.831Z"
                      },
                      "amount": 2700
                    }
                  ]
                },
                {
                  "price_id": "comp2-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                  "product_id": "target-price-product-id",
                  "quantity": 3,
                  "unit_amount": 15000,
                  "unit_amount_currency": "EUR",
                  "unit_amount_decimal": "150.00",
                  "amount_subtotal": 45000,
                  "amount_total": 47700,
                  "taxes": [
                    {
                      "tax": {
                        "_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4",
                        "type": "VAT",
                        "behavior": "Exclusive",
                        "active": true,
                        "region": "DE",
                        "_schema": "tax",
                        "_title": "Tax Without Behaviour",
                        "description": "Without Behaviour",
                        "rate": "6",
                        "_org": "739224",
                        "_created_at": "2022-02-07T14:49:08.831Z",
                        "_updated_at": "2022-02-07T14:49:08.831Z"
                      },
                      "amount": 2700
                    }
                  ]
                }
              ],
              "_price": {
                "_id": "c2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                "_schema": "price",
                "_title": "Test 1",
                "description": "Test 1",
                "_org": "739224",
                "_created_at": "2022-02-18T10:10:26.439Z",
                "_updated_at": "2022-02-18T11:53:04.191Z",
                "active": true,
                "price_components": {
                  "$relation": [
                    {
                      "entity_id": "comp1-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                      "_schema": "price",
                      "_product_id": "target-price-product-id",
                      "quantity": 1,
                      "item": {
                        "_id": "comp1-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                        "unit_amount": 10000,
                        "unit_amount_currency": "EUR",
                        "unit_amount_decimal": "100.00",
                        "sales_tax": "standard",
                        "tax_behavior": "exclusive",
                        "price_display_in_journeys": "show_price",
                        "type": "one_time",
                        "_schema": "price",
                        "_title": "Test 1",
                        "description": "Test 1",
                        "tax": {
                          "$relation": [
                            {
                              "entity_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4"
                            }
                          ]
                        },
                        "_org": "739224",
                        "_created_at": "2022-02-18T10:10:26.439Z",
                        "_updated_at": "2022-02-18T11:53:04.191Z",
                        "active": true,
                        "billing_period": "weekly",
                        "billing_duration_unit": "months",
                        "notice_time_unit": "months",
                        "termination_time_unit": "months",
                        "renewal_duration_unit": "months"
                      }
                    },
                    {
                      "entity_id": "comp2-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                      "_schema": "price",
                      "_product_id": "target-price-product-id",
                      "quantity": 2,
                      "item": {
                        "_id": "comp2-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                        "unit_amount": 10000,
                        "unit_amount_currency": "EUR",
                        "unit_amount_decimal": "100.00",
                        "sales_tax": "standard",
                        "tax_behavior": "exclusive",
                        "price_display_in_journeys": "show_price",
                        "type": "one_time",
                        "_schema": "price",
                        "_title": "Test 1",
                        "description": "Test 1",
                        "tax": {
                          "$relation": [
                            {
                              "entity_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4"
                            }
                          ]
                        },
                        "_org": "739224",
                        "_created_at": "2022-02-18T10:10:26.439Z",
                        "_updated_at": "2022-02-18T11:53:04.191Z",
                        "active": true,
                        "billing_period": "weekly",
                        "billing_duration_unit": "months",
                        "notice_time_unit": "months",
                        "termination_time_unit": "months",
                        "renewal_duration_unit": "months"
                      }
                    }
                  ]
                }
              },
              "_product": {
                "_id": "73f857a4-0fbc-4aa6-983f-87c0d6d410a6",
                "type": "product",
                "name": "Cool box",
                "_title": "Cool box"
              },
              "description": "Price Bundle - Test 1",
              "unit_amount": 90000,
              "amount_subtotal": 270000,
              "amount_total": 286200
            },
            {
              "price_id": "adbd8cee-0db2-41dd-b93b-2d0ed57c77da",
              "product_id": "11bd46e5-4c02-425c-bcce-5f5e022a2b45",
              "taxes": [
                {
                  "tax": null,
                  "amount": 0
                }
              ],
              "_price": {
                "_id": "adbd8cee-0db2-41dd-b93b-2d0ed57c77da",
                "unit_amount": 55566677,
                "unit_amount_currency": "EUR",
                "unit_amount_decimal": "555666.77",
                "sales_tax": "standard",
                "tax_behavior": "inclusive",
                "price_display_in_journeys": "show_as_starting_price",
                "type": "one_time",
                "_schema": "price",
                "_title": "As Starting Price One Time No Tax",
                "description": "As Starting Price One Time No Tax",
                "tax": null,
                "active": true,
                "_org": "739224",
                "_created_at": "2022-04-14T16:12:34.456Z",
                "_updated_at": "2022-04-14T16:13:47.261Z",
                "billing_period": "weekly",
                "billing_duration_unit": "months",
                "notice_time_unit": "months",
                "termination_time_unit": "months",
                "renewal_duration_unit": "months"
              },
              "_product": {
                "_id": "11bd46e5-4c02-425c-bcce-5f5e022a2b45",
                "type": "product",
                "_schema": "product",
                "_title": "Product With A Lot Of Prices - Do Not Change 🙏",
                "name": "Product With A Lot Of Prices - Do Not Change 🙏",
                "_org": "739224",
                "_created_at": "2022-04-14T16:08:08.595Z",
                "_updated_at": "2022-04-18T16:26:33.089Z",
                "price_options": {
                  "$relation": [
                    {
                      "entity_id": "f850ebff-082e-4924-8631-965cc9c0ab2b",
                      "_tags": []
                    },
                    {
                      "entity_id": "d6ecc576-b5d6-44b4-8c95-496ab2ac14d3",
                      "_tags": []
                    },
                    {
                      "entity_id": "3c0e47ad-6ca3-4cd8-b6b4-b2a48dab7f16",
                      "_tags": []
                    },
                    {
                      "entity_id": "adbd8cee-0db2-41dd-b93b-2d0ed57c77da",
                      "_tags": []
                    },
                    {
                      "entity_id": "3e97f809-1d4b-47e1-9faf-46386b2b0d21",
                      "_tags": []
                    },
                    {
                      "entity_id": "d4061656-71dc-45ec-bf6c-1d90d2419d87",
                      "_tags": []
                    },
                    {
                      "entity_id": "4ae4221b-4fd0-4bcc-98a2-f20cda954903",
                      "_tags": []
                    },
                    {
                      "entity_id": "b326df19-9d0f-433a-a4d2-a0a65034b5f7",
                      "_tags": []
                    },
                    {
                      "entity_id": "0d071551-47be-4a5b-90d7-d425a59607e6",
                      "_tags": []
                    }
                  ]
                },
                "_files": {
                  "$relation": [
                    {
                      "entity_id": "27cc0710-651d-48dc-9624-9d1d3057d025",
                      "_tags": []
                    },
                    {
                      "entity_id": "8530678c-d4cb-4e27-b314-16a79d6c0abc",
                      "_tags": []
                    },
                    {
                      "entity_id": "714d6253-213f-4e30-8caf-00b0d11032e4",
                      "_tags": []
                    },
                    {
                      "entity_id": "2218a8f8-c6e2-4a98-a2fe-030ed78ebfa7",
                      "_tags": []
                    }
                  ]
                }
              },
              "quantity": 7,
              "currency": "EUR",
              "description": "As Starting Price One Time No Tax",
              "unit_amount": 55566677,
              "amount_subtotal": 388966739,
              "amount_total": 388966739
            }
          ],
          "amount_subtotal": 389236739,
          "amount_total": 389252939,
          "total_details": {
            "amount_tax": 5400,
            "breakdown": {
              "taxes": [
                {
                  "tax": {
                    "_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4",
                    "type": "VAT",
                    "behavior": "Exclusive",
                    "active": true,
                    "region": "DE",
                    "_schema": "tax",
                    "_title": "Tax Without Behaviour",
                    "description": "Without Behaviour",
                    "rate": "6",
                    "_org": "739224",
                    "_created_at": "2022-02-07T14:49:08.831Z",
                    "_updated_at": "2022-02-07T14:49:08.831Z"
                  },
                  "amount": 5400
                }
              ],
              "recurrences": [
                {
                  "type": "one_time",
                  "amount_subtotal": 389236739,
                  "amount_total": 389252939,
                  "amount_tax": 5400
                }
              ]
            }
          },
          "_schema": "order",
          "_id": "78ac88ae-d7df-4a1e-a26b-acaf089abfb2",
          "_org": "739224",
          "_created_at": "2022-04-19T08:19:29.816Z",
          "_updated_at": "2022-04-20T16:15:48.759Z",
          "_title": "OREabZxnO",
          "customer": {
            "$relation": [
              {
                "entity_id": "bb986d50-f403-477c-9d9c-726f8fd6d155"
              }
            ]
          }
        }
      },
      "opportunity": {
        "value": {
          "opportunity_number": "OP 2022/335790",
          "source": {
            "title": "manual"
          },
          "source_type": "manual",
          "_schema": "opportunity",
          "_title": "16 Module Solar Pack Lead",
          "opportunity_title": "16 Module Solar Pack Lead",
          "due_date": "2022-06-30T15:18:00.000Z",
          "assignee": [
            {
              "id": "10002563",
              "email": "j.pinho@epilot.cloud",
              "display_name": "j.pinho@epilot.cloud",
              "token": "9e1758a3-2a32-4a5f-b034-a8ab883f8fb9",
              "image_uri": {},
              "organization_id": "728",
              "department": null,
              "preferred_language": "en",
              "status": "Active",
              "phone": null,
              "email_notification_setting": {
                "added_participant_opportunity": true,
                "assigned_opportunity": true,
                "assigned_task": true,
                "comment_opportunity": true,
                "deleted_task": true,
                "escalated_task": true,
                "message_receive_opportunity": true,
                "message_send_opportunity": true,
                "created_task": true,
                "created_opportunity_manual": true,
                "created_opportunity_auto": true,
                "deleted_opportunity": true
              },
              "is_signature_enabled": true,
              "created_at": "2021-05-18T06:30:25.36046"
            }
          ],
          "description": "Lead generated automatically via journey automation.",
          "customer": {
            "$relation": [
              {
                "entity_id": "69bf4355-9c1e-498a-b87e-6c873668194d",
                "_tags": []
              },
              {
                "entity_id": "8625e2e4-978e-4d16-b3d2-0d05fb4091f0",
                "_tags": []
              }
            ]
          },
          "dates": [
            {
              "_tags": [
                "Installation Date"
              ],
              "dates": "",
              "value": "2022-06-30T15:21:00.000Z"
            }
          ],
          "items": {
            "$relation": [
              {
                "entity_id": "ff5fcdaf-9e36-4292-97f0-6a4e3f82a8f3"
              },
              {
                "entity_id": "ec10b7cf-95ce-4f6b-a266-c566c7734b96"
              },
              {
                "entity_id": "c3745dfe-4a46-4c22-8bf3-6159303474e4"
              }
            ]
          },
          "billing_address": {
            "$relation_ref": [
              {
                "entity_id": "69bf4355-9c1e-498a-b87e-6c873668194d",
                "path": "address.2"
              }
            ]
          },
          "delivery_address": {
            "$relation_ref": [
              {
                "entity_id": "69bf4355-9c1e-498a-b87e-6c873668194d",
                "path": "address.24"
              }
            ]
          },
          "address": {
            "$relation_ref": [
              {
                "entity_id": "69bf4355-9c1e-498a-b87e-6c873668194d",
                "path": "address.25"
              }
            ]
          },
          "_id": "319a274b-0477-45e3-9d58-1f46c82d4604",
          "_org": "728",
          "_created_at": "2022-06-03T15:26:14.006Z",
          "_updated_at": "2022-06-03T15:26:14.006Z"
        }
      },
      "product": {
        "value": {
          "type": "product",
          "_schema": "product",
          "_title": "Solar Panel with Battery Storage",
          "name": "Solar Panel with Battery Storage",
          "code": "SOLAR-BATT",
          "active": true,
          "description": "Solar Panel with battery solution, optimized for max efficiency. ",
          "feature": [
            {
              "_tags": [],
              "feature": "Eco-Panels"
            },
            {
              "_tags": [],
              "feature": "Remote Management Platform"
            },
            {
              "_tags": [],
              "feature": "Battery Remote Control"
            },
            {
              "_tags": [],
              "feature": "Mobile App"
            }
          ],
          "cross_sellable_products": {
            "$relation": [
              {
                "entity_id": "068d0713-a650-4668-9ed2-eca7be31e337",
                "_schema": "product",
                "_tags": []
              },
              {
                "entity_id": "c8402ee7-fba9-4f3d-bffd-6803ca655782",
                "_tags": []
              }
            ]
          },
          "product_images": {
            "$relation": [
              {
                "entity_id": "37bdeaaa-65fe-403e-9894-65b01cd277f1"
              },
              {
                "entity_id": "56dde657-795c-41bb-bf53-98fd586b7e6e"
              }
            ]
          },
          "product_downloads": {
            "$relation": [
              {
                "entity_id": "64211361-8759-414b-81c0-afbf24f83aa9"
              }
            ]
          },
          "_id": "a7f4771a-6368-4d77-bb01-71f1e4902de5",
          "_org": "728",
          "_created_at": "2022-06-03T15:52:27.512Z",
          "_updated_at": "2022-06-03T16:05:15.029Z",
          "price_options": {
            "$relation": [
              {
                "entity_id": "9c36c23b-1574-4193-beff-b1b5e1124bc7",
                "_tags": []
              },
              {
                "entity_id": "146aa2cc-f267-4d5e-bda4-cbe2669b7741",
                "_tags": []
              }
            ]
          }
        }
      },
      "price": {
        "value": {
          "unit_amount": 100000,
          "unit_amount_currency": "EUR",
          "unit_amount_decimal": "1000",
          "sales_tax": "standard",
          "tax_behavior": "inclusive",
          "price_display_in_journeys": "show_price",
          "type": "one_time",
          "billing_period": "weekly",
          "billing_duration_unit": "months",
          "notice_time_unit": "months",
          "termination_time_unit": "months",
          "renewal_duration_unit": "months",
          "_schema": "price",
          "_title": "Solar Panel Module",
          "description": "Solar Panel Module",
          "active": true,
          "tax": {
            "$relation": [
              {
                "entity_id": "24641e82-0690-4135-8b43-ef12a9b1c5dc"
              }
            ]
          },
          "_id": "9c36c23b-1574-4193-beff-b1b5e1124bc7",
          "_org": "728",
          "_created_at": "2022-06-03T16:04:10.369Z",
          "_updated_at": "2022-06-03T16:04:10.369Z"
        }
      },
      "price-bundle": {
        "value": {
          "_id": "c2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
          "_schema": "price",
          "_title": "My Price Bundle",
          "description": "My Price Bundle",
          "_org": "739224",
          "_created_at": "2022-02-18T10:10:26.439Z",
          "_updated_at": "2022-02-18T11:53:04.191Z",
          "active": true,
          "price_components": {
            "$relation": [
              {
                "entity_id": "comp1-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                "_schema": "price",
                "_product_id": "target-price-product-id",
                "quantity": 1,
                "item": {
                  "_id": "comp1-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                  "unit_amount": 10000,
                  "unit_amount_currency": "EUR",
                  "unit_amount_decimal": "100.00",
                  "sales_tax": "standard",
                  "tax_behavior": "exclusive",
                  "price_display_in_journeys": "show_price",
                  "type": "one_time",
                  "_schema": "price",
                  "_title": "Test 1",
                  "description": "Test 1",
                  "tax": {
                    "$relation": [
                      {
                        "entity_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4"
                      }
                    ]
                  },
                  "_org": "739224",
                  "_created_at": "2022-02-18T10:10:26.439Z",
                  "_updated_at": "2022-02-18T11:53:04.191Z",
                  "active": true,
                  "billing_period": "weekly",
                  "billing_duration_unit": "months",
                  "notice_time_unit": "months",
                  "termination_time_unit": "months",
                  "renewal_duration_unit": "months"
                }
              },
              {
                "entity_id": "comp2-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                "_schema": "price",
                "_product_id": "target-price-product-id",
                "quantity": 2,
                "item": {
                  "_id": "comp2-2a95ca9-7a50-41a4-a73c-b5fb1a57d40f",
                  "unit_amount": 10000,
                  "unit_amount_currency": "EUR",
                  "unit_amount_decimal": "100.00",
                  "sales_tax": "standard",
                  "tax_behavior": "exclusive",
                  "price_display_in_journeys": "show_price",
                  "type": "one_time",
                  "_schema": "price",
                  "_title": "Test 1",
                  "description": "Test 1",
                  "tax": {
                    "$relation": [
                      {
                        "entity_id": "18bbbc2e-2c37-4f91-924a-07ae60d830e4"
                      }
                    ]
                  },
                  "_org": "739224",
                  "_created_at": "2022-02-18T10:10:26.439Z",
                  "_updated_at": "2022-02-18T11:53:04.191Z",
                  "active": true,
                  "billing_period": "weekly",
                  "billing_duration_unit": "months",
                  "notice_time_unit": "months",
                  "termination_time_unit": "months",
                  "renewal_duration_unit": "months"
                }
              }
            ]
          }
        }
      }
    }
  }
}
