{
  "openapi": "3.0.3",
  "info": {
    "title": "Email settings API",
    "version": "1.3.0"
  },
  "tags": [
    {
      "name": "Email settings",
      "description": "Email settings service"
    }
  ],
  "security": [
    {
      "EpilotAuth": []
    },
    {
      "AsOrganization": []
    },
    {
      "EpilotOrg": []
    }
  ],
  "paths": {
    "/v2/email-settings/email-addresses/epilot:provision": {
      "put": {
        "operationId": "provisionEpilotEmailAddress",
        "summary": "provisionEpilotEmailAddress",
        "description": "Provision or reactivate epilot email address, deactivating other active epilot email addresses.",
        "tags": [
          "Email addresses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionEpilotEmailAddressPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProvisionEpilotEmailAddressSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v2/email-settings/email-addresses/primary": {
      "post": {
        "operationId": "setEmailAddressPrimary",
        "summary": "setEmailAddressPrimary",
        "description": "Set email address as primary",
        "tags": [
          "Email addresses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetEmailAddressPrimaryPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SetEmailAddressPrimarySuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v2/email-settings/email-addresses/{id}": {
      "get": {
        "operationId": "getEmailAddress",
        "summary": "getEmailAddress",
        "description": "Get email address",
        "tags": [
          "Email addresses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/EmailAddressId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetEmailAddressSuccessResponse"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "operationId": "deleteEmailAddress",
        "summary": "deleteEmailAddress",
        "description": "Delete email address",
        "tags": [
          "Email addresses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/EmailAddressId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "operationId": "updateEmailAddress",
        "summary": "updateEmailAddress",
        "description": "Update email address",
        "tags": [
          "Email addresses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/EmailAddressId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailAddressPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateEmailAddressSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v2/email-settings/email-addresses": {
      "get": {
        "operationId": "listEmailAddresses",
        "summary": "listEmailAddresses",
        "description": "List email addresses",
        "tags": [
          "Email addresses"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListEmailAddressesSuccessResponse"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "operationId": "addEmailAddress",
        "summary": "addEmailAddress",
        "description": "Add email address",
        "tags": [
          "Email addresses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailAddressPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateEmailAddressSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v2/email-settings/shared-inboxes/{id}": {
      "get": {
        "operationId": "getSharedInbox",
        "summary": "getSharedInbox",
        "description": "Get shared inbox",
        "tags": [
          "Shared inboxes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SharedInboxId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetSharedInboxSuccessResponse"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "operationId": "deleteSharedInbox",
        "summary": "deleteSharedInbox",
        "description": "Delete shared inbox, rerouting emails to a successor inbox (or default inbox if no successor is provided).",
        "tags": [
          "Shared inboxes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SharedInboxId"
          },
          {
            "name": "successorInboxId",
            "description": "ID of the successor inbox. If not provided, the default inbox will be used.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "a10bd0ff-4391-4cfc-88ee-b19d718a9bf7"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "operationId": "updateSharedInbox",
        "summary": "updateSharedInbox",
        "description": "Update shared inbox",
        "tags": [
          "Shared inboxes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SharedInboxId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSharedInboxPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateSharedInboxSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v2/email-settings/shared-inboxes": {
      "get": {
        "operationId": "listSharedInboxes",
        "summary": "listSharedInboxes",
        "description": "List shared inboxes",
        "tags": [
          "Shared inboxes"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListSharedInboxesSuccessResponse"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "operationId": "addSharedInbox",
        "summary": "addSharedInbox",
        "description": "Add shared inbox",
        "tags": [
          "Shared inboxes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSharedInboxPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateSharedInboxSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/email-settings": {
      "get": {
        "operationId": "getSettings",
        "summary": "getSettings",
        "description": "Get all settings by type",
        "tags": [
          "Settings"
        ],
        "parameters": [
          {
            "name": "type",
            "description": "Setting types:\n* signature\n* email_domain\n* email_address\n* whitelist_email_address\n* restrict_duplicates_within\n",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SettingType"
            },
            "example": "signature"
          },
          {
            "name": "id",
            "description": "ID of setting",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "a10bd0ff-4391-4cfc-88ee-b19d718a9bf7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "operationId": "addSetting",
        "summary": "addSetting",
        "description": "Add setting",
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Setting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "operationId": "deleteSetting",
        "summary": "deleteSetting",
        "description": "delete setting by ID and type",
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "type"
                ],
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/SettingType"
                  },
                  "id": {
                    "type": "string",
                    "description": "ID of setting",
                    "example": "a10bd0ff-4391-4cfc-88ee-b19d718a9bf7"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Setting"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/email-settings/{id}": {
      "post": {
        "operationId": "updateSetting",
        "summary": "updateSetting",
        "description": "Update setting by ID",
        "tags": [
          "Settings"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "ID of setting",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "a10bd0ff-4391-4cfc-88ee-b19d718a9bf7"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Setting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Setting"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/email-settings/domain": {
      "post": {
        "operationId": "addDomain",
        "summary": "addDomain",
        "description": "Add domain",
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "operationId": "deleteDomain",
        "summary": "deleteDomain",
        "description": "Delete domain",
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/email-settings/domain/name-servers:verify": {
      "post": {
        "operationId": "verifyNameServers",
        "summary": "verifyNameServers",
        "description": "Verify name servers",
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/email-settings/domain:verify": {
      "post": {
        "operationId": "verifyDomain",
        "summary": "verifyDomain",
        "description": "Verify domain",
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "ProvisionEpilotEmailAddressSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EmailAddressResponse"
            }
          }
        }
      },
      "SetEmailAddressPrimarySuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EmailAddressResponse"
            }
          }
        }
      },
      "CreateEmailAddressSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EmailAddressResponse"
            }
          }
        }
      },
      "UpdateEmailAddressSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EmailAddressResponse"
            }
          }
        }
      },
      "GetEmailAddressSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EmailAddressResponse"
            }
          }
        }
      },
      "ListEmailAddressesSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EmailAddressResponse"
              }
            }
          }
        }
      },
      "NoContent": {
        "description": "Success"
      },
      "CreateSharedInboxSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SharedInboxResponse"
            }
          }
        }
      },
      "UpdateSharedInboxSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SharedInboxResponse"
            }
          }
        }
      },
      "GetSharedInboxSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SharedInboxResponse"
            }
          }
        }
      },
      "ListSharedInboxesSuccessResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SharedInboxResponse"
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "EmailAddressId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "test@example.com"
      },
      "SharedInboxId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "a10bd0ff-4391-4cfc-88ee-b19d718a9bf7"
      }
    },
    "securitySchemes": {
      "EpilotAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authorization header with epilot OAuth2 bearer token",
        "bearerFormat": "JWT"
      },
      "AsOrganization": {
        "type": "apiKey",
        "in": "header",
        "name": "x-ivy-org-id",
        "description": "Set organization id when using internal auth"
      },
      "EpilotOrg": {
        "description": "Overrides the target organization to allow shared tenant access",
        "name": "x-epilot-org-id",
        "in": "header",
        "type": "apiKey"
      }
    },
    "schemas": {
      "ProvisionEpilotEmailAddressPayload": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "SetEmailAddressPrimaryPayload": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "UpdateEmailAddressPayload": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default_signature_id": {
            "type": "string"
          },
          "shared_inbox_id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "CreateEmailAddressPayload": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default_signature_id": {
            "type": "string"
          },
          "shared_inbox_id": {
            "type": "string"
          }
        }
      },
      "EmailAddressResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SettingMeta"
          },
          {
            "type": "object",
            "required": [
              "address"
            ],
            "properties": {
              "address": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "user_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "group_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "default_signature_id": {
                "type": "string"
              },
              "shared_inbox_id": {
                "type": "string"
              },
              "is_active": {
                "type": "boolean"
              },
              "is_primary": {
                "type": "boolean"
              },
              "is_epilot_email_address": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        }
      },
      "SettingMeta": {
        "type": "object",
        "required": [
          "id",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "UpdateSharedInboxPayload": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateSharedInboxPayload": {
        "type": "object",
        "required": [
          "name",
          "color"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assignees": {
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SharedInboxResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SettingMeta"
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "color",
              "assignees",
              "bucket_id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "assignees": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "bucket_id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SettingsResponse": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Setting"
            }
          },
          {
            "$ref": "#/components/schemas/Setting"
          }
        ]
      },
      "SignatureSetting": {
        "type": "string",
        "description": "Setting that allows to add a signature.",
        "enum": [
          "signature"
        ]
      },
      "EmailDomainSetting": {
        "type": "string",
        "description": "Setting that allows to add a custom domain. For e.g; doe.com",
        "enum": [
          "email_domain"
        ]
      },
      "EmailAddressSetting": {
        "type": "string",
        "description": "Setting that allows to add an email address on the custom domain. For e.g; john@doe.com",
        "enum": [
          "email_address"
        ]
      },
      "WhitelistEmailAddressSetting": {
        "type": "string",
        "description": "- Setting that specifies a list of addresses exempt from being flagged as duplicate emails.\n- An email will be flagged as a duplicate if it has the same content and is sent to the same recipient within the time frame specified in the RestrictDuplicatesWithinSetting.\n",
        "enum": [
          "whitelist_email_address"
        ]
      },
      "RestrictDuplicatesWithinSetting": {
        "type": "string",
        "description": "- Restrict duplicates within:\n  * 10s\n  * 5m\n  * 1d\n  * 5000 // It converts to 5 seconds.When expressed as a numerical value, it will be interpreted as being in milliseconds.\n- Defaults to 3 minutes\n- Negative values will be treated same as positive values\n- If not set, defaults to 3 min\n- If set as 0, then the no email will be treated as a duplicate\n- Cannot have multiple values\n",
        "enum": [
          "restrict_duplicates_within"
        ]
      },
      "SettingType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SignatureSetting"
          },
          {
            "$ref": "#/components/schemas/EmailDomainSetting"
          },
          {
            "$ref": "#/components/schemas/EmailAddressSetting"
          },
          {
            "$ref": "#/components/schemas/WhitelistEmailAddressSetting"
          },
          {
            "$ref": "#/components/schemas/RestrictDuplicatesWithinSetting"
          }
        ]
      },
      "Setting": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "org_id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/SettingType"
          },
          "value": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        },
        "additionalProperties": true
      },
      "Domain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "example": "subdomain.epilot.cloud"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://email-settings.sls.epilot.io"
    },
    {
      "url": "https://email-settings.sls.epilot.io"
    }
  ]
}
